name: Build and Deploy MAAT CD API to CP

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - "TM-246"
  
jobs:

  application-image-build:
    name: application-image-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 #v4.0.2
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - name: Pre-build
        id: tag-image
        run: |
          java -version
          echo "Pulling in SQS integration test Docker image dependencies"
          docker pull localstack/localstack
          echo "Finished pulling localstack/localstack test dependency"
      - name: Build & Push Image
        id: build-and-push-image
        run: |
          echo "Building the ear file and Docker image with gradle..."
          pushd maat-court-data-api
          chmod +x ./gradlew
          ./gradlew build

          echo "Building the docker image and tagging it"
          docker build -t maat-cda .
          docker tag maat-cda $REGISTRY/$REPOSITORY:$GITHUB_TAG

          echo "Pushing the Docker image to $REGISTRY/$REPOSITORY:$GITHUB_TAG"
          docker push $REGISTRY/$REPOSITORY:$GITHUB_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          GITHUB_TAG: ${{ github.sha }}
          

  deploy-to-development:
    name: deploy-to-development
    needs: [application-image-build]
    runs-on: ubuntu-latest
    environment: development
    env:
      KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
      KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
    steps:
      # - name: Populating k8s yml files with variables
      #   id: populate-k8s-files
      #   run: |
      #     cat cloud-platform-helm/maat_api/values_development.yaml | envsubst > cloud-platform-helm/deployment.yml
      #   env: # TODO These envs needs updating depending on what is referenced in the k8s yml files above
      #     # SOURCE_APP_TAG: ${{ env.SOURCE_APP_TAG }}
      #     REGISTRY: ${{ secrets.ECR_REGISTRY_URL }}
      #     REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      - name: Authenticating to the Kubernetes cluster
        id: authenticate-k8s-cluster
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
          kubectl config use-context ${KUBE_CLUSTER}
        
      - name: Helm deploy to Dev environment
        id: deploy-to-dev
        run: |
         cd cloud-platform-helm/maat_api
         helm upgrade maat-api -f values_development.yaml . --namespace ${KUBE_NAMESPACE} --install --set maat-api.spec.containers.image="$REGISTRY/$REPOSITORY:$GITHUB_TAG"
        env:
          REGISTRY: ${{ secrets.ECR_REGISTRY_URL }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          GITHUB_TAG: ${{ github.sha }}
          