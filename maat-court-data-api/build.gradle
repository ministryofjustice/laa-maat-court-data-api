import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'info.solidsoft.pitest' version '1.7.0'
    id "org.sonarqube" version "4.0.0.2929"
}


def versions = [
        mapstructVersion                    : '1.3.1.Final',
        springdocVersion                    : '1.6.6',
        springAwsCloudVersion               : "3.0.1",
        amazonSQSVersion                    : "2.1.1",
        ojdbc8Version                       : '19.7.0.0',
        gsonVersion                         : '2.8.6',
        commLan3Vriosn                      : '3.10',
        lombokMapStrutBinding               : '0.2.0',
        sonarVersion                        : '2.7',
        h2DBVersion                         : '1.4.200',
        mockitoInlineVersion                : "5.2.0",
        harmcrestVersion                    : '1.3',
        festVersion                         : '1.4',
        gradlePitest                        : '1.4.6',
        pitest                              : '1.4.10',
        sonarPitest                         : '0.5',
        okhttpVersion                       : '4.9.3',
        mockWebServerVersion                : '4.9.3',
        hibernateJpaModelGen                : '6.3.1.Final',
        gqlVersion                          : '2.7.5',
        graphqlJavaTools                    : '13.0.2',
        commonsIOVersion                    : '2.11.0',
        xercesImplVersion                   : '2.12.2',
        awsStsVersion                       : '2.20.69',
        oracleXMLParserVersion              : '23.2.0.0',
        micrometerCloudWatchVersion         : '1.9.0',
        awaitilityVersion                   : '4.2.0',
        awsJavaSdkVersion                   : '1.12.264',
        testcontainersJunitJupiterVersion   : '1.19.0',
        testcontainersLocalstackVersion     : '1.18.3',
        cloudLocalstackUtilsVersion         : '0.2.23',
        springContractStubRunnerVersion     : '4.0.1',
        sentryBomVersion                    : '6.17.0'
]

group = 'gov.uk'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sourceSets {
    testSqsIntegration {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testSqsIntegrationImplementation.extendsFrom implementation
}


repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {

    implementation platform("io.sentry:sentry-bom:$versions.sentryBomVersion")
    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)

    implementation("io.sentry:sentry-spring-boot-starter")
    implementation("io.sentry:sentry-logback")
    //Required for Logback configuration due to a dependency having their own implementation of SAXParserFactory
    implementation "xerces:xercesImpl:$versions.xercesImplVersion"

    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-activemq'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client'

    implementation "io.awspring.cloud:spring-cloud-aws-starter-sqs:$versions.springAwsCloudVersion"
    implementation "org.springframework:spring-jms"
    implementation "com.amazonaws:amazon-sqs-java-messaging-lib:$versions.amazonSQSVersion"

    implementation "software.amazon.awssdk:sts:$versions.awsStsVersion"

    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springdocVersion
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    implementation "org.mapstruct:mapstruct:$versions.mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$versions.mapstructVersion"
    //Required for lombok version > 1.18.16
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$versions.lombokMapStrutBinding"

    implementation "io.micrometer:micrometer-registry-cloudwatch2:$versions.micrometerCloudWatchVersion"

    implementation group: 'io.sentry', name: 'sentry-spring-boot-starter'
    implementation group: 'io.sentry', name: 'sentry-logback'

    // DB Dependencies
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: versions.ojdbc8Version
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'


    implementation group: 'com.google.code.gson', name: 'gson', version: versions.gsonVersion
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commLan3Vriosn

    annotationProcessor group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernateJpaModelGen

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: versions.sonarVersion

    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
    implementation group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: versions.sonarPitest
    implementation group: 'org.pitest', name: 'pitest', version: versions.pitest

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-graphql'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'com.graphql-java-kickstart', name: 'graphql-java-tools', version: versions.graphqlJavaTools

    implementation group: 'com.oracle.database.xml', name: 'xmlparserv2', version: versions.oracleXMLParserVersion
    implementation group: 'com.oracle.database.xml', name: 'xdb', version: versions.oracleXMLParserVersion

    // Test Only
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'com.h2database', name: 'h2', version: versions.h2DBVersion
    testImplementation "org.mockito:mockito-inline:$versions.mockitoInlineVersion"
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: versions.harmcrestVersion
    testImplementation group: 'commons-io', name: 'commons-io', version: versions.commonsIOVersion
    testImplementation group: 'org.easytesting', name: 'fest-assert', version: versions.festVersion
    testImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: versions.okhttpVersion
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: versions.mockWebServerVersion
    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'

    // Only required for SQS Integration test
    testSqsIntegrationImplementation "org.awaitility:awaitility:$versions.awaitilityVersion"
    testSqsIntegrationImplementation group: 'com.amazonaws', name: 'aws-java-sdk', version: versions.awsJavaSdkVersion
    testSqsIntegrationImplementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: versions.awsJavaSdkVersion
    testSqsIntegrationImplementation "org.testcontainers:junit-jupiter:$versions.testcontainersJunitJupiterVersion"
    testSqsIntegrationImplementation "org.testcontainers:localstack:$versions.testcontainersLocalstackVersion"
    testSqsIntegrationImplementation "cloud.localstack:localstack-utils:$versions.cloudLocalstackUtilsVersion"
    testSqsIntegrationImplementation "com.h2database:h2"
    testSqsIntegrationImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:$versions.springContractStubRunnerVersion"
}


test {
    dependsOn 'cleanTest'
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task testSqsIntegration(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.testSqsIntegration.output.classesDirs
    classpath = sourceSets.testSqsIntegration.runtimeClasspath
}

check.dependsOn testSqsIntegration


pitest {
    targetClasses = ['gov.uk.courtdata.link.*', 'gov.uk.courtdata.unlink.*', 'gov.uk.courtdata.laastatus.*', 'gov.uk.courtdata.hearing.*']
    excludedClasses = ['gov.uk.courtdata.hearing.dto.*', 'gov.uk.courtdata.hearing.mapper.*', 'gov.uk.courtdata.laastatus.client.*']
    threads = 5
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 60
}

tasks['sonarqube'].dependsOn test

sonarqube {
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java, **/enums/**.java, **/aspect/**.java, **/**StoredProcedureRepository.java, **/helper/BooleanConverter.java"
        property "sonar.coverage.exclusions", "**/MAATCourtDataApplication.java"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.projectKey", "maat-court-data-api"
        property "sonar.projectName", "Crime Apps :: maat-court-data-api"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

    }
}