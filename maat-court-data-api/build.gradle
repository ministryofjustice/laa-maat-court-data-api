plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'net.ltgt.apt' version '0.20'
    id 'net.ltgt.apt-idea' version '0.21'
    id "org.sonarqube" version "2.7"
}

group = 'gov.uk'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.3.1.Final"
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.2.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    implementation 'org.springframework:spring-jms:5.0.2.RELEASE'
    implementation 'org.springframework.security:spring-security-oauth2-client:5.3.3.RELEASE'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.4.2'

    implementation 'io.projectreactor.netty:reactor-netty'


    // AWS
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.816')
    implementation 'com.amazonaws:aws-java-sdk-sqs'
    implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.6'


    implementation 'io.sentry:sentry:1.7.30'
    implementation 'io.sentry:sentry-logback:1.7.30'


    // DB Dependencies
    implementation 'com.oracle.database.jdbc:ojdbc8:12.2.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.liquibase:liquibase-core'


    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.commons:commons-lang3:3.10'

    compileOnly "org.projectlombok:lombok:1.18.6"
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7'

    // Test Only
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"
    testCompile('org.junit.jupiter:junit-jupiter:5.6.2')


}

test {
    dependsOn 'cleanTest'
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
sonarqube {
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java"
        property "sonar.coverage.exclusions", "**/MAATCourtDataApplication.java"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.projectKey", "maat-court-data-api"
        property "sonar.projectName", "Crime Apps :: maat-court-data-api"

    }
}