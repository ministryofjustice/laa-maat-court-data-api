plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'net.ltgt.apt' version '0.21'
    id 'net.ltgt.apt-idea' version '0.21'
    id 'info.solidsoft.pitest' version '1.7.0'
    id "org.sonarqube" version "4.0.0.2929"
}


def versions = [
        mapstructVersion              : '1.3.1.Final',
        sentryVersion                 : '5.0.1',
        springdocVersion              : '1.6.6',
        springCloudAwsMessagingVersion: '2.4.1',
        amazonSQSVersion              : '1.0.8',
        ojdbc8Version                 : '19.7.0.0',
        gsonVersion                   : '2.8.6',
        commLan3Vriosn                : '3.10',
        lombokVersion                 : '1.18.6',
        sonarVersion                  : '2.7',
        h2DBVersion                   : '1.4.200',
        mockitoVersion                : '3.3.3',
        harmcrestVersion              : '1.3',
        festVersion                   : '1.4',
        jupiterVersion                : '5.8.2',
        gradlePitest                  : '1.4.6',
        pitest                        : '1.4.10',
        sonarPitest                   : '0.5',
        okhttpVersion                 : '4.9.3',
        mockWebServerVersion          : '4.9.3',
        xRayVersion                   : '2.11.2',
        hibernateJpaModelGen          : '5.6.14.Final',
        gqlVersion                    : '2.7.5',
        graphqlJavaTools              : '13.0.2',
        commonsIOVersion              : '2.11.0'
]

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.7.5"
        mavenBom "org.springframework:spring-framework-bom:5.3.24"
        mavenBom "com.amazonaws:aws-java-sdk-bom:1.12.110"
        mavenBom "org.springframework.security:spring-security-bom:5.5.3"
    }
    dependencies {
        dependencySet(group: 'io.sentry', version: versions.sentryVersion) {
            entry 'sentry-spring-boot-starter'
            entry 'sentry-logback'
        }
        dependencySet(group: 'org.mapstruct', version: versions.mapstructVersion) {
            entry 'mapstruct'
            entry 'mapstruct-processor'
        }
    }
}
group = 'gov.uk'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {

    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-activemq'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client'


    implementation 'io.awspring.cloud:spring-cloud-starter-aws-messaging:2.4.1'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.1'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springdocVersion

    implementation group: 'io.projectreactor.netty', name: 'reactor-netty'

    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    // AWS
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-sql', version: versions.xRayVersion
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-slf4j', version: versions.xRayVersion
    implementation group: 'com.amazonaws', name: 'amazon-sqs-java-messaging-lib', version: versions.amazonSQSVersion
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-spring', version: versions.xRayVersion

    implementation group: 'org.mapstruct', name: 'mapstruct'
    implementation 'io.micrometer:micrometer-registry-cloudwatch2:1.9.0'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor'

    implementation group: 'io.sentry', name: 'sentry-spring-boot-starter'
    implementation group: 'io.sentry', name: 'sentry-logback'

    // DB Dependencies
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: versions.ojdbc8Version
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'


    implementation group: 'com.google.code.gson', name: 'gson', version: versions.gsonVersion
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commLan3Vriosn

    annotationProcessor group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernateJpaModelGen

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombokVersion
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombokVersion

    implementation group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: versions.sonarVersion

    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
    implementation group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: versions.sonarPitest
    implementation group: 'org.pitest', name: 'pitest', version: versions.pitest

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-graphql'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'com.graphql-java-kickstart', name: 'graphql-java-tools', version: versions.graphqlJavaTools

    implementation group: 'com.oracle.database.xml', name: 'xmlparserv2', version: '23.2.0.0'
    implementation group: 'com.oracle.database.xml', name: 'xdb', version: '23.2.0.0'

    // Test Only
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'com.h2database', name: 'h2', version: versions.h2DBVersion
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: versions.mockitoVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiterVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.jupiterVersion
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: versions.harmcrestVersion
    testImplementation group: 'commons-io', name: 'commons-io', version: versions.commonsIOVersion
    testImplementation group: 'org.easytesting', name: 'fest-assert', version: versions.festVersion
    testImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: versions.okhttpVersion
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: versions.mockWebServerVersion

    testImplementation 'io.awspring.cloud:spring-cloud-aws-test:2.4.1'

    // for AWS infrastructure (SQS) integration tests
    testImplementation 'org.testcontainers:testcontainers:1.16.0'
    testImplementation 'org.testcontainers:localstack:1.16.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'

}


test {
    dependsOn 'cleanTest'
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

pitest {
    targetClasses = ['gov.uk.courtdata.link.*', 'gov.uk.courtdata.unlink.*', 'gov.uk.courtdata.laastatus.*', 'gov.uk.courtdata.hearing.*']
    excludedClasses = ['gov.uk.courtdata.hearing.dto.*', 'gov.uk.courtdata.hearing.mapper.*', 'gov.uk.courtdata.laastatus.client.*']
    threads = 5
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 60
}

tasks['sonarqube'].dependsOn test

sonarqube {
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java, **/enums/**.java, **/aspect/**.java, **/**StoredProcedureRepository.java, **/helper/BooleanConverter.java"
        property "sonar.coverage.exclusions", "**/MAATCourtDataApplication.java"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.projectKey", "maat-court-data-api"
        property "sonar.projectName", "Crime Apps :: maat-court-data-api"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

    }
}